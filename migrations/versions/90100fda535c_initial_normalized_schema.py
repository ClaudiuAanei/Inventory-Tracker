"""initial normalized schema

Revision ID: 90100fda535c
Revises: 
Create Date: 2025-09-05 23:44:59.081544

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '90100fda535c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products'))
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index('ix_products_category', ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_sku'), ['sku'], unique=True)

    op.create_table('token_blocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=64), nullable=False),
    sa.Column('token_type', sa.String(length=10), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token_blocklist'))
    )
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blocklist_jti'), ['jti'], unique=True)
        batch_op.create_index(batch_op.f('ix_token_blocklist_user_id'), ['user_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('account', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_account'), ['account'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('warehouse',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_warehouse'))
    )
    with op.batch_alter_table('warehouse', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_warehouse_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_warehouse_name'), ['name'], unique=True)

    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('min_threshold', sa.Integer(), nullable=False),
    sa.Column('max_capacity', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('min_threshold >= 0', name='ck_stock_min_threshold_nonneg'),
    sa.CheckConstraint('quantity >= 0', name='ck_stock_quantity_nonneg'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_stocks_product_id_products'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouse.id'], name=op.f('fk_stocks_warehouse_id_warehouse'), ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stocks')),
    sa.UniqueConstraint('warehouse_id', 'product_id', name='uq_stock_prod_wh')
    )
    with op.batch_alter_table('stocks', schema=None) as batch_op:
        batch_op.create_index('ix_stock_prod_wh', ['product_id', 'warehouse_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stocks_product_id'), ['product_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_stocks_warehouse_id'), ['warehouse_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('stocks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stocks_warehouse_id'))
        batch_op.drop_index(batch_op.f('ix_stocks_product_id'))
        batch_op.drop_index('ix_stock_prod_wh')

    op.drop_table('stocks')
    with op.batch_alter_table('warehouse', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_warehouse_name'))
        batch_op.drop_index(batch_op.f('ix_warehouse_is_active'))

    op.drop_table('warehouse')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.drop_index(batch_op.f('ix_users_account'))

    op.drop_table('users')
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blocklist_user_id'))
        batch_op.drop_index(batch_op.f('ix_token_blocklist_jti'))

    op.drop_table('token_blocklist')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_sku'))
        batch_op.drop_index(batch_op.f('ix_products_name'))
        batch_op.drop_index('ix_products_category')

    op.drop_table('products')
    # ### end Alembic commands ###
